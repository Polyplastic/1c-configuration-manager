
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПараметрыДетальногоСписка(Неопределено,"");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)                

	Если НЕ ЗначениеЗаполнено(ЧьиЗадачи) Тогда
		ЧьиЗадачи="Любые";
	КонецЕсли;
	ОбновитьТаблицуДанныхДляРаботы();
	УстановитьУсловноеОформлениеМоиЗадачи();
	
КонецПроцедуры

 
&НаКлиенте
Процедура ЧьиЗадачиПриИзменении(Элемент)  
	УстановитьУсловноеОформлениеМоиЗадачи();
	ОбновитьТаблицуДанныхДляРаботы();
КонецПроцедуры


&НаКлиенте
Процедура СценарийПриИзменении(Элемент)
	ОбновитьТаблицуДанныхДляРаботы();
КонецПроцедуры



&НаКлиенте
Процедура УстановитьУсловноеОформлениеМоиЗадачи()

	
	Если ЧьиЗадачи="Ответственный" Тогда
		Элементы.Ответственный.Доступность=Истина;
		Элементы.Ответственный.АвтоОтметкаНезаполненного=Истина;
		Элементы.ТаблицаДляРаботыОтветственный.Видимость=Ложь;
	ИначеЕсли ЧьиЗадачи="МоиЗадачи" Тогда
		Элементы.Ответственный.Доступность=Ложь;
		Элементы.Ответственный.АвтоОтметкаНезаполненного=Ложь;  
		Элементы.ТаблицаДляРаботыОтветственный.Видимость=Ложь;
	Иначе
		Элементы.Ответственный.Доступность=Ложь;
		Элементы.Ответственный.АвтоОтметкаНезаполненного=Ложь;  
		Элементы.ТаблицаДляРаботыОтветственный.Видимость=Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьТаблицуДанныхДляРаботы()
	
	// найдем ручные правки
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетРучной.Сценарий КАК Сценарий,
	|	РасчетРучной.Ключ КАК Ключ
	|ИЗ
	|	РегистрСведений.РасчетИзмененийКонфигурацийРучнаяПравка КАК РасчетРучной
	|ГДЕ
	|	РасчетРучной.Сценарий = &Сценарий";
	Запрос.УстановитьПараметр("Сценарий",Сценарий);             
	
	КэшРучныхПравок = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл    
		Ключ = Строка(Выборка.Сценарий.UUID())+"/"+Выборка.Ключ;
		КэшРучныхПравок.Вставить(Ключ,Истина);
	КонецЦикла;
	
	// найдем изменения
	Запрос.Текст = "ВЫБРАТЬ
	|	Обработанные.Сценарий КАК Сценарий,
	|	Обработанные.Ответственный КАК Ответственный,
	|	Обработанные.СвойствоОбъектаКонфигурации КАК СвойствоОбъектаКонфигурации
	|ПОМЕСТИТЬ ВтДляОбработки
	|ИЗ
	|	РегистрСведений.ОбработанныеОбъектыКонфигурации КАК Обработанные
	|ГДЕ
	|	Обработанные.Сценарий = &Сценарий
	|	И Обработанные.Ответственный = &Ответственный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СравнениеКонфигураций.Сценарий КАК Сценарий,
	|	СравнениеКонфигураций.Ключ КАК Ключ,
	|	СУММА(1) КАК КоличествоПроблем,
	|	СУММА(ВЫБОР
	|			КОГДА СравнениеКонфигураций.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработки.Обработан)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоОбработано,
	|	СУММА(ВЫБОР
	|			КОГДА СравнениеКонфигураций.ТипПроблемы = ЗНАЧЕНИЕ(Перечисление.ТипыПроблем.Ошибка)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоОшибок,
	|	СУММА(ВЫБОР
	|			КОГДА СравнениеКонфигураций.ТипПроблемы = ЗНАЧЕНИЕ(Перечисление.ТипыПроблем.Предупреждение)
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПредупреждений
	|ИЗ
	|	РегистрСведений.СравнениеКонфигураций КАК СравнениеКонфигураций
	|ГДЕ
	|	СравнениеКонфигураций.Сценарий = &Сценарий
	|	И СравнениеКонфигураций.ТипПроблемы В (ЗНАЧЕНИЕ(Перечисление.ТипыПроблем.Ошибка), ЗНАЧЕНИЕ(Перечисление.ТипыПроблем.Предупреждение))
	|	И (&Любые = ИСТИНА
	|			ИЛИ СравнениеКонфигураций.МодульБазовойКонфигурации В
	|				(ВЫБРАТЬ
	|					ВтДляОбработки.СвойствоОбъектаКонфигурации КАК СвойствоОбъектаКонфигурации
	|				ИЗ
	|					ВтДляОбработки КАК ВтДляОбработки))
	|
	|СГРУППИРОВАТЬ ПО
	|	СравнениеКонфигураций.Сценарий,
	|	СравнениеКонфигураций.Ключ
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ВЫБОР
	|				КОГДА СравнениеКонфигураций.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОбработки.Обработан)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ) <> СУММА(1)
	|		ИЛИ &ТолькоНеобработанные = ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сравнение.Сценарий КАК Сценарий,
	|	Сравнение.Ключ КАК Ключ,
	|	Обработанные.Ответственный КАК Ответственный
	|ИЗ
	|	РегистрСведений.ОбработанныеОбъектыКонфигурации КАК Обработанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СравнениеКонфигураций КАК Сравнение
	|		ПО Обработанные.Сценарий = Сравнение.Сценарий
	|			И Обработанные.СвойствоОбъектаКонфигурации = Сравнение.МодульБазовойКонфигурации
	|ГДЕ
	|	Сравнение.Сценарий = &Сценарий";
	Запрос.УстановитьПараметр("Сценарий",Сценарий);             
	Запрос.УстановитьПараметр("Любые",Ложь);
	Запрос.УстановитьПараметр("ТолькоНеобработанные",ТолькоНеобработанные);
	
	Если ЧьиЗадачи="МоиЗадачи" Тогда
		Запрос.УстановитьПараметр("Ответственный",Пользователи.ТекущийПользователь());
	ИначеЕсли ЧьиЗадачи="Любые" Тогда                                                            
		Запрос.УстановитьПараметр("Ответственный",Неопределено);
		Запрос.УстановитьПараметр("Любые",Истина);
	ИначеЕсли ЧьиЗадачи="Ответственный" Тогда                                                            
		Запрос.УстановитьПараметр("Ответственный",Ответственный);
	КонецЕсли;       
	
	Результат = Запрос.ВыполнитьПакет();
	
	// сохраним отвественных
	КэшОтвественных = Новый Соответствие();
	Выборка = Результат[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		КэшОтвественных.Вставить(НРег(Выборка.Ключ),Выборка.Ответственный);
	КонецЦикла;
	
	// зполним проблемами
	Выборка = Результат[1].Выбрать();
	
	ТаблицаДляРаботы.Очистить();
	
	Пока Выборка.Следующий() Цикл
		стр_н = ТаблицаДляРаботы.Добавить();
		ЗаполнитьЗначенияСвойств(стр_н,Выборка);  
		Ключ = Строка(Выборка.Сценарий.UUID())+"/"+Выборка.Ключ;
		Если КэшРучныхПравок.Получить(Ключ)=Истина Тогда
			стр_н.РучнаяПравка = Истина;
		КонецЕсли;
		стр_н.Ответственный = КэшОтвественных.Получить(НРег(Выборка.Ключ));
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	ОбновитьТаблицуДанныхДляРаботы();
КонецПроцедуры


&НаСервере
Процедура УстановитьПараметрыДетальногоСписка(мСценарий,мКлюч)
	
	СписокДетальный.Параметры.УстановитьЗначениеПараметра("Сценарий",мСценарий);
	СписокДетальный.Параметры.УстановитьЗначениеПараметра("Ключ",мКлюч);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДляРаботыПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.ТаблицаДляРаботы.ТекущиеДанные;
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	УстановитьПараметрыДетальногоСписка(Сценарий,ТекущиеДанные.Ключ);
КонецПроцедуры   

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	ОбновитьТаблицуДанныхДляРаботы();
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьОтличияИзмененнойОтБазовой(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаДляРаботы.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;      
	
	ДанныеОтличий = ПолучитьОтличияФайловСравнение(ТекущиеДанные.Сценарий,ТекущиеДанные.Ключ);
	
	КлючФормы = Новый UUID();
	мПараметры = новый Структура();
	мПараметры.Вставить("АдресВоВременномХранилище",ПередатьДанныеВоВнешнююФорму(ДанныеОтличий));
	мПараметры.Вставить("diff_api","diff");
	мПараметры.Вставить("diff_inline",Истина);
	мПараметры.Вставить("КлючФормы",КлючФормы);
	мПараметры.Вставить("ЗаголовокФормы","сравнение: "+ТекущиеДанные.Ключ+" - текущие отличия");
	мПараметры.Вставить("Ключ",ТекущиеДанные.Ключ);
	мПараметры.Вставить("Сценарий",ТекущиеДанные.Сценарий);
	
	Форма = ПолучитьФорму("ОбщаяФорма.ФормаСравненияФайловWebInline",мПараметры,ЭтаФорма,КлючФормы);	
	
	Форма.Открыть();
	Оповестить("diff_изменение",мПараметры,ЭтаФорма);
	
КонецПроцедуры     

&НаКлиенте
Процедура ПоказатьПланируемуюВставку(Команда)
	ТекущиеДанные = Элементы.ТаблицаДляРаботы.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;      
	
	ДанныеОтличий = ПолучитьОтличияФайловРасчетИзменений(ТекущиеДанные.Сценарий,ТекущиеДанные.Ключ);
	
	КлючФормы = Новый UUID();	
	мПараметры = новый Структура();
	мПараметры.Вставить("АдресВоВременномХранилище",ПередатьДанныеВоВнешнююФорму(ДанныеОтличий));
	мПараметры.Вставить("diff_api","diff");
	мПараметры.Вставить("diff_inline",Истина);
	мПараметры.Вставить("КлючФормы",КлючФормы);
	мПараметры.Вставить("ЗаголовокФормы","расчет: "+ТекущиеДанные.Ключ+" - текущие отличия");
	мПараметры.Вставить("Ключ",ТекущиеДанные.Ключ);
	мПараметры.Вставить("Сценарий",ТекущиеДанные.Сценарий);
	
	Форма = ПолучитьФорму("ОбщаяФорма.ФормаСравненияФайловWebInline",мПараметры,ЭтаФорма,КлючФормы);	
	
	Форма.Открыть();
	Оповестить("diff_изменение",мПараметры,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Функция ПередатьДанныеВоВнешнююФорму(МассивДанных)
	
	мСтруктура = новый Структура();
	мСтруктура.Вставить("МассивДанных",МассивДанных);

	Возврат ПоместитьВоВременноеХранилище(мСтруктура);
	
КонецФункции


&НаСервереБезКонтекста
Функция ПолучитьОтличияФайловСравнение(Сценарий,Ключ)
	
	Возврат РегистрыСведений.СравнениеКонфигураций.ПолучитьОтличияФайловСравнение(Сценарий,Ключ);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОтличияФайловРасчетИзменений(Сценарий,Ключ)
	
	Возврат РегистрыСведений.РасчетИзмененийКонфигураций.ПолучитьОтличияФайловРасчетИзменений(Сценарий,Ключ);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОтличияФайловРасчетИзмененийРучнаяПравка(Сценарий,Ключ)
	
	Возврат РегистрыСведений.РасчетИзмененийКонфигурацийРучнаяПравка.ПолучитьОтличияФайловРасчетИзменений(Сценарий,Ключ);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИсходныйБазовыйФайл(Сценарий,Ключ)
	
	Возврат РегистрыСведений.СравнениеКонфигураций.ПолучитьИсходныйБазовыйФайл(Сценарий,Ключ);
	
КонецФункции          

&НаСервереБезКонтекста
Функция ПолучитьИсходныйБазовыйНовыйФайл(Сценарий,Ключ)
	
	Возврат РегистрыСведений.РасчетИзмененийКонфигураций.ПолучитьИсходныйБазовыйНовыйФайл(Сценарий,Ключ);
	
КонецФункции



&НаКлиенте
Процедура РедактироватьВручнуюФайл(Команда)
	ТекущиеДанные = Элементы.ТаблицаДляРаботы.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;      
	
	ДанныеОтличий = ПолучитьОтличияФайловРасчетИзмененийРучнаяПравка(ТекущиеДанные.Сценарий,ТекущиеДанные.Ключ);
	
	// тогда это новый файл
	Если ДанныеОтличий.Количество()=0 Тогда
		ДанныеОтличий = ПолучитьОтличияФайловРасчетИзменений(ТекущиеДанные.Сценарий,ТекущиеДанные.Ключ);
	КонецЕсли;
	
	ТекстФайла = ""; 
	МассивСтрок = Новый Массив;
	// формируем файл
	Для каждого стр из ДанныеОтличий Цикл
		МассивСтрок.Добавить(стр.Текст);
	КонецЦикла;                         
	ТекстФайла = СтрСоединить(МассивСтрок,Символы.ПС);
	
	КлючФормы = Новый UUID();
	мПараметры = новый Структура();
	мПараметры.Вставить("ТекстФайла",ТекстФайла);
	мПараметры.Вставить("КлючФормы",КлючФормы);
	мПараметры.Вставить("ЗаголовокФормы","правка: "+ТекущиеДанные.Ключ+"");
	мПараметры.Вставить("Ключ",ТекущиеДанные.Ключ);
	мПараметры.Вставить("Сценарий",ТекущиеДанные.Сценарий);
	
	Форма = ПолучитьФорму("ОбщаяФорма.ФормаРедактированияКода1С",мПараметры,ЭтаФорма,КлючФормы);	
	
	Форма.Открыть();
КонецПроцедуры           


&НаКлиенте
Процедура ПроставитьОбработано(Команда)
	
	ВыделенныеСтроки = Элементы.СписокДетальный.ВыделенныеСтроки;
	
	Для каждого ИдентификаторСтроки из ВыделенныеСтроки Цикл
		
		ТекущиеДанные = Элементы.СписокДетальный.ДанныеСтроки(ИдентификаторСтроки);
		
		Если НЕ ТекущиеДанные=Неопределено Тогда
		
			ОбработкаИзмененийКонфигурацийВызовСервера.ПроставитьСтатусОбработаноПоUID(ТекущиеДанные.Сценарий,ТекущиеДанные.Ключ,ТекущиеДанные.UID);		
			
		КонецЕсли;
		
	КонецЦикла;   
	
	Элементы.СписокДетальный.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИсходныйФайлБазовой(Команда)
	ТекущиеДанные = Элементы.ТаблицаДляРаботы.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;      
	
	ДанныеФайла = ПолучитьИсходныйБазовыйФайл(ТекущиеДанные.Сценарий,ТекущиеДанные.Ключ);
	
	ТекстФайла = ""; 
	МассивСтрок = Новый Массив;
	// формируем файл
	Для каждого стр из ДанныеФайла Цикл
		МассивСтрок.Добавить(стр.Текст);
	КонецЦикла;                         
	ТекстФайла = СтрСоединить(МассивСтрок,Символы.ПС);
	
	КлючФормы = Новый UUID();
	мПараметры = новый Структура();
	мПараметры.Вставить("ТекстФайла",ТекстФайла);
	мПараметры.Вставить("КлючФормы",КлючФормы);
	мПараметры.Вставить("ЗаголовокФормы","исходный: "+ТекущиеДанные.Ключ+"");
	мПараметры.Вставить("Ключ",ТекущиеДанные.Ключ);
	мПараметры.Вставить("Сценарий",ТекущиеДанные.Сценарий);
	
	Форма = ПолучитьФорму("ОбщаяФорма.ФормаРедактированияКода1С",мПараметры,ЭтаФорма,КлючФормы);	
	
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИсходныйФайлБазовойНовой(Команда)
	ТекущиеДанные = Элементы.ТаблицаДляРаботы.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;      
	
	ДанныеФайла = ПолучитьИсходныйБазовыйНовыйФайл(ТекущиеДанные.Сценарий,ТекущиеДанные.Ключ);
	
	ТекстФайла = ""; 
	МассивСтрок = Новый Массив;
	// формируем файл
	Для каждого стр из ДанныеФайла Цикл
		МассивСтрок.Добавить(стр.Текст);
	КонецЦикла;                         
	ТекстФайла = СтрСоединить(МассивСтрок,Символы.ПС);
	
	КлючФормы = Новый UUID();
	мПараметры = новый Структура();
	мПараметры.Вставить("ТекстФайла",ТекстФайла);
	мПараметры.Вставить("КлючФормы",КлючФормы);
	мПараметры.Вставить("ЗаголовокФормы","исходный: "+ТекущиеДанные.Ключ+"");
	мПараметры.Вставить("Ключ",ТекущиеДанные.Ключ);
	мПараметры.Вставить("Сценарий",ТекущиеДанные.Сценарий);
	
	Форма = ПолучитьФорму("ОбщаяФорма.ФормаРедактированияКода1С",мПараметры,ЭтаФорма,КлючФормы);	
	
	Форма.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура ТолькоНеобработанныеПриИзменении(Элемент)
	ОбновитьТаблицуДанныхДляРаботы();
КонецПроцедуры


 