
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ТипОбработки) Тогда
		ТипОбработки = "ДобавитьНовые";
	КонецЕсли;
	
	Элементы.ТипОбработки.СписокВыбора.Добавить("ДобавитьНовые","(+) новые");
	Элементы.ТипОбработки.СписокВыбора.Добавить("ОбновитьСуществующие","(@) обновить");
	Элементы.ТипОбработки.СписокВыбора.Добавить("УдалитьЛишние","(-) удалить");
	Элементы.ТипОбработки.СписокВыбора.Добавить("ДобавитьНовыеИУдалитьЛишние","(+) и (-)");
	Элементы.ТипОбработки.СписокВыбора.Добавить("ДобавитьНовыеИУдалитьЛишниеИОбновитьСуществующие","(+) и (-) и (@)");
	
	Элементы.ТаблицаМетаданныхДействие.РежимВыбораИзСписка = Истина;
	Элементы.ТаблицаМетаданныхДействие.СписокВыбора.Добавить("","---");
	Элементы.ТаблицаМетаданныхДействие.СписокВыбора.Добавить("Добавить","(+)");
	Элементы.ТаблицаМетаданныхДействие.СписокВыбора.Добавить("Удалить","(-)");
	Элементы.ТаблицаМетаданныхДействие.СписокВыбора.Добавить("Обновить","(@)");

КонецПроцедуры


	 
&НаКлиенте
Функция ПолучитьКомПодключение(КомБаза,БазаДанных)
	Попытка                                                 
		СтрокаПодключения = ОбщегоНазначенияКлиентСервер.ЗначениеРеквизитаОбъекта(БазаДанных,"СтрокаПодключения");
		Если НЕ ЗначениеЗаполнено(СтрокаПодключения) Тогда
			ВызватьИсключение "Не заполнена строка соединения в базе: "+БазаДанных;
		КонецЕсли;
		Если КомБаза=Неопределено Тогда
			КомОбъект = Новый COMОбъект("V83.COMConnector");
			КомБаза = КомОбъект.Connect(СтрокаПодключения);
		КонецЕсли;
	Исключение                                                       
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ТекстСообщения = "Ошибка при создании COM объекта по причине: " + ИнформацияОбОшибке.Описание;
		Если НЕ ИнформацияОбОшибке.Причина=Неопределено Тогда
			ТекстСообщения = ТекстСообщения+Символы.ПС+"Причина: "+ИнформацияОбОшибке.Причина.Описание
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецПопытки; 	
	Возврат КомБаза;
КонецФункции

&НаКлиенте
Процедура ПолучитьДанныеВнешнейБазы(Команда)
	
	Состояние("Проверка и подключение com...Первая");
	КомБазаПерваяКонфигурация = ПолучитьКомПодключение(КомБазаПерваяКонфигурация,БазаДанныхПерваяКонфигурация);
	
	Если КомБазаПерваяКонфигурация=Неопределено Тогда
		Сообщить("Не удалось установить COM соединение с базой источником!");
		Возврат;
	КонецЕсли;
	
	
	Состояние("Начало получение данных...");		
	
	ш = 1;
	// формируем стуркутры для сравнения
	//Для каждого стр из МассивТиповМетаданных Цикл   
	//	ш=ш+1;
	//	Состояние("Получение метаданных..."+стр,Окр(ш/МассивТиповМетаданных.Количество()*100));		
	//	// формируем структуру метаданных первая конфигурация
	//	ПоискВМетаданныхПолныйКом(КомБазаПерваяКонфигурация,стр,СтруктураКонфигурацииПерваяКонфигурация);
	//КонецЦикла;                           
	                          
	ЗапросCOM = КомБазаПерваяКонфигурация.NewObject("Запрос");
	ЗапросCOM.Текст = "ВЫБРАТЬ
	|	ДОП.Наименование КАК Наименование,
	|	ДОП.Вид КАК Вид,
	|	ВЫБОР
	|		КОГДА ДОП.Вид = Значение(Перечисление.ВидыДополнительныхОтчетовИОбработок.Отчет)
	|		ИЛИ ДОП.Вид = Значение(Перечисление.ВидыДополнительныхОтчетовИОбработок.ДополнительныйОтчет)
	|			ТОГДА ""ВнешнийОтчет""
	|		ИНАЧЕ ""ВнешняяОбработка""
	|	КОНЕЦ КАК ТипТаблицы,
	|	ДОП.ИмяОбъекта КАК ПолноеИмя,
	|	ДОП.ИмяФайла КАК ИмяФайла
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК ДОП
	|ГДЕ
	|	ДОП.ЭтоГруппа = ЛОЖЬ
	|	И ДОП.ПометкаУдаления = ЛОЖЬ
	|	И ДОП.Публикация = ЗНАЧЕНИЕ(Перечисление.ВариантыПубликацииДополнительныхОтчетовИОбработок.Используется)";
	ТаблицаДанных = ЗапросCOM.Выполнить().Выгрузить();
	
	Состояние("Заполняем таблицу...");
	
	// заполняем таблицу              
	Для каждого стр из ТаблицаДанных Цикл
		стр_н = ТаблицаМетаданных.Добавить();
		ЗаполнитьЗначенияСвойств(стр_н,стр);
		стр_н.ПолноеИмя = стр.ПолноеИмя;  
		стр_н.Синоним = стр.Наименование;  
		стр_н.Тип = стр.ТипТаблицы;  
		стр_н.ИндексКартинки = ПолучитьИндексКартинки(стр_н.ТипТаблицы); 
		стр_н.ЭтоМетаданные=Истина;
	КонецЦикла;
	
	
	Состояние("Завершена обработка!");	
	
КонецПроцедуры  


&НаКлиенте
Функция ПолучитьИндексКартинки(Знач ПолноеИмя)
	ИндексКартинки = 0;   
	ПолноеИмя = НРег(ПолноеИмя);
	
	Если Найти(ПолноеИмя,"отчет") Тогда
		ИндексКартинки = 5;
	ИначеЕсли Найти(ПолноеИмя,"обработка") Тогда
		ИндексКартинки = 6;
	КонецЕсли;
	
	Возврат ИндексКартинки;
КонецФункции

&НаСервере
Процедура НайтиСоотвествиеНаСервере()
	
	// проходим и создаем нужные объекты
	СоответсвтвиеМетаданныхКонфигурации = Новый Соответствие;
	СоответсвтвиеПолейМетаданныхКонфигурации = Новый Соответствие;
	
	// выбираем старые
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОбъектыКонфигурации.Ссылка КАК Ссылка,
	|	ОбъектыКонфигурации.ПолноеИмя КАК ПолноеИмя,
	|	ОбъектыКонфигурации.ИмяФайла КАК ИмяФайла
	|ПОМЕСТИТЬ ВтОбъекты
	|ИЗ
	|	Справочник.ОбъектыКонфигурации КАК ОбъектыКонфигурации
	|ГДЕ
	|	ОбъектыКонфигурации.Конфигурация = &Конфигурация
	|	И НЕ ОбъектыКонфигурации.ПометкаУдаления
	|	И ОбъектыКонфигурации.ЭтоМетаданные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтОбъекты.Ссылка КАК Ссылка,
	|	ВтОбъекты.ПолноеИмя КАК ПолноеИмя,
	|	ВтОбъекты.ИмяФайла КАК ИмяФайла
	|ИЗ
	|	ВтОбъекты КАК ВтОбъекты
	|";
	Запрос.УстановитьПараметр("Конфигурация",КонфигурацияВнешнихОтчетовОбработок);
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[1].Выбрать();  
	
	
	Пока Выборка.Следующий() Цикл                                            
		СтрктураСтроки = Новый Структура("Ссылка,Обработан",Выборка.Ссылка,Ложь);
		СоответсвтвиеМетаданныхКонфигурации.Вставить(НРег(Выборка.ПолноеИмя),СтрктураСтроки);
		СоответсвтвиеМетаданныхКонфигурации.Вставить(НРег(Выборка.ИмяФайла),СтрктураСтроки);
	КонецЦикла;                  
	
	// Теперь проходим по метаданным и делаем что-то
	Для каждого стр из ТаблицаМетаданных Цикл            
		ОбъектМетаданных  =  СоответсвтвиеМетаданныхКонфигурации.Получить(НРег(стр.ПолноеИмя));
		Если НЕ ОбъектМетаданных=Неопределено Тогда                                            
			ОбъектМетаданных  =  СоответсвтвиеМетаданныхКонфигурации.Получить(НРег(стр.ИмяФайла));
		КонецЕсли;
		Если НЕ ОбъектМетаданных=Неопределено Тогда
			стр.ОбъектКонфигурации=ОбъектМетаданных.ССылка;
			ОбъектМетаданных.Обработан = Истина;
		КонецЕсли;
		Если ОбъектМетаданных=Неопределено Тогда
			стр.Действие = "Добавить";
		КонецЕсли;
	КонецЦикла;  
	
	// добавляем новые
	Для каждого стр из СоответсвтвиеМетаданныхКонфигурации Цикл
		Если стр.Значение.Обработан=Истина Тогда
			Продолжить;
		КонецЕсли;
		стр_н = ТаблицаМетаданных.Добавить();
		стр_н.ОбъектКонфигурации = стр.Значение.Ссылка;
		стр_н.Действие = "Удалить";
	КонецЦикла;
	
КонецПроцедуры      


&НаКлиенте
Процедура НайтиСоотвествие(Команда)
	НайтиСоотвествиеНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФункцияНайтиСоздатьРодителя(ИмяРодителя,ПолноеИмя,Конфигурация)
	Родитель = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОбъектыКонфигурации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыКонфигурации КАК ОбъектыКонфигурации
	|ГДЕ
	|	ОбъектыКонфигурации.Конфигурация = &Конфигурация
	|	И НЕ ОбъектыКонфигурации.ПометкаУдаления
	|	И ОбъектыКонфигурации.ПолноеИмя = &ПолноеИмя
	|	И ОбъектыКонфигурации.Тип В (&Типы)";
	Запрос.УстановитьПараметр("Конфигурация",Конфигурация);
	Запрос.УстановитьПараметр("ПолноеИмя",ПолноеИмя); 
	Типы = новый Массив;                
	Типы.Добавить(Перечисления.ТипыОбъектов.Папка);
	Типы.Добавить(Перечисления.ТипыОбъектов.Конфигурация);
	Запрос.УстановитьПараметр("Типы",Типы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Родитель = Выборка.Ссылка;
	Иначе   
		
		СправочникОбъект = Справочники.ОбъектыКонфигурации.СоздатьЭлемент();
		СправочникОбъект.Тип=Перечисления.ТипыОбъектов.Папка;
		СправочникОбъект.Наименование = ИмяРодителя;
		СправочникОбъект.ПолноеИмя = ПолноеИмя;
		СправочникОбъект.Конфигурация = Конфигурация;
		
		Если НЕ ИмяРодителя="Конфигурация" Тогда
			СправочникОбъект.Родитель = ФункцияНайтиСоздатьРодителя("Конфигурация","Конфигурация",Конфигурация);
		Иначе                                                
			СправочникОбъект.Наименование = "Внешние отчеты и обработки";
			СправочникОбъект.ПолноеИмя = "Конфигурация";
			СправочникОбъект.Тип=Перечисления.ТипыОбъектов.Конфигурация;
		КонецЕсли;    
		
		СправочникОбъект.Записать();
		
		Родитель = СправочникОбъект.Ссылка;
	КонецЕсли;	
	
	Возврат Родитель;
КонецФункции
	


&НаСервере
Функция СоздатьСправочникОбъектыКонфигурации(Источник,ТипТаблицы,Конфигурация)
	
	СправочникОбъект = Справочники.ОбъектыКонфигурации.СоздатьЭлемент();
	
	ЗаполнитьЗначенияСвойств(СправочникОбъект,Источник);    
	МассивСтрок = СтрРазделить(Источник.ПолноеИмя,".",Ложь);
	ИнверсныйМассив = Новый Массив;
	Для ш=0 по МассивСтрок.ВГраница() Цикл
		ИнверсныйМассив.Добавить(МассивСтрок[МассивСтрок.ВГраница()-ш]);		
	КонецЦикла;
	СправочникОбъект.Наименование = СтрСоединить(ИнверсныйМассив,".");; 
	СправочникОбъект.Конфигурация = Конфигурация;
	СправочникОбъект.ЭтоМетаданные = Истина;
	//TODO найти тип 
	Попытка      
		СправочникОбъект.Тип = Перечисления.ТипыОбъектов[ТипТаблицы];
	Исключение
	КонецПопытки;

	СправочникОбъект.Родитель = ФункцияНайтиСоздатьРодителя(Строка(СправочникОбъект.Тип),Строка(СправочникОбъект.Тип),Конфигурация);
	
	Попытка
		СправочникОбъект.Записать();		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;

	Возврат СправочникОбъект.Ссылка;
КонецФункции



&НаСервере
Процедура СоздатьОбновитьОбъектыНаСервере()      
	
	Для каждого стр из ТаблицаМетаданных Цикл
		Если НЕ стр.Выбрана = Истина Тогда
			Продолжить;
		КонецЕсли;
		Если стр.Действие = "Добавить" Тогда   
			Если стр.ЭтоМетаданные=Истина Тогда
				стр.ОбъектКонфигурации = СоздатьСправочникОбъектыКонфигурации(стр,стр.ТипТаблицы,КонфигурацияВнешнихОтчетовОбработок);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры




&НаКлиенте
Процедура СоздатьОбновитьОбъекты(Команда)
	СоздатьОбновитьОбъектыНаСервере();
КонецПроцедуры



&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для каждого стр из ТаблицаМетаданных Цикл
		стр.Выбрана = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для каждого стр из ТаблицаМетаданных Цикл
		стр.Выбрана = Ложь;
	КонецЦикла;
КонецПроцедуры
