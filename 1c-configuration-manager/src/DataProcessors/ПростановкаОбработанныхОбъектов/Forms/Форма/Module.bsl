
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();
	Если ЗначениеЗаполнено(Параметры.Конфигурация) Тогда
		Конфигурация = Параметры.Конфигурация;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДатаОбработки = ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура Преобразовать(Команда)       
	ПреобразоватьСервер();
	Элементы.Страницы.ТекущаяСтраница=Элементы.СтраницаПреобразование;
КонецПроцедуры

&НаСервере
Процедура ПреобразоватьСервер()
	
	
	// 1 получим массив строк  
	МассивСтрок = СтрРазделить(Текст,Символы.ПС+";,:!?&%",Ложь);
	
	// 2 исключим лишние
	ТаблицаЗначений = Новый ТаблицаЗначений();
	ТаблицаЗначений.Колонки.Добавить("Наименование",Новый ОписаниеТипов("Строка"));
	ТаблицаЗначений.Колонки.Добавить("НаименованиеСвойства",Новый ОписаниеТипов("Строка"));
	ТаблицаЗначений.Колонки.Добавить("ИмяФайла",Новый ОписаниеТипов("Строка"));
	
	Для каждого стр из МассивСтрок Цикл
		Если НЕ СтрНайти(стр,".") Тогда
			Продолжить;
		КонецЕсли;
		// это файлы
		Если СтрНайти(НРег(стр),".epf") ИЛИ СтрНайти(НРег(стр),".erf") ИЛИ СтрНайти(НРег(стр),".cfe") Тогда
			стр_н = ТаблицаЗначений.Добавить();                
			МассивЧастей = СтрРазделить(СокрЛП(стр),"\/",Ложь);
			Для каждого часть из МассивЧастей Цикл
				Если СтрНайти(НРег(часть),".epf") ИЛИ СтрНайти(НРег(часть),".erf") ИЛИ СтрНайти(НРег(часть),".cfe") Тогда
					ПозицияРасширения = СтрНайти(НРег(часть),".epf");
					Если ПозицияРасширения=0 Тогда                   
						ПозицияРасширения = СтрНайти(НРег(часть),".erf");
					КонецЕсли;
					Если ПозицияРасширения=0 Тогда                   
						ПозицияРасширения = СтрНайти(НРег(часть),".cfe");
					КонецЕсли;
					стр_н.Наименование = СокрЛП(часть);
					стр_н.ИмяФайла = СокрЛП(часть);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе // или объекты метаданных
			стр_н = ТаблицаЗначений.Добавить();
			МассивЧастей = СтрРазделить(СокрЛП(стр),". ",Ложь);
			Если МассивЧастей.Количество()=2 Тогда
				стр_н.Наименование = СокрЛП(стр);
			ИначеЕсли МассивЧастей.Количество()>2 Тогда
				стр_н.Наименование = СокрЛП(МассивЧастей[0])+"."+СокрЛП(МассивЧастей[1]);
				Для каждого часть из МассивЧастей Цикл                                  
					Если СтрНайти(СокрЛП(часть)," ") Тогда
						Прервать;
					КонецЕсли;
					стр_н.НаименованиеСвойства = стр_н.НаименованиеСвойства+?(ЗначениеЗаполнено(стр_н.НаименованиеСвойства),".","")+СокрЛП(часть);
				КонецЦикла;
			Иначе                                
				стр_н.Наименование = СокрЛП(стр);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;  
	
	// 3 находим данные
	Запрос = Новый Запрос;                                
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Т.Наименование КАК СТРОКА(150)) КАК Наименование,
	|	ВЫРАЗИТЬ(Т.НаименованиеСвойства КАК СТРОКА(150)) КАК НаименованиеСвойства,
	|	ВЫРАЗИТЬ(Т.ИмяФайла КАК СТРОКА(150)) КАК ИмяФайла
	|ПОМЕСТИТЬ ВтТЗ
	|ИЗ
	|	&ТЗ КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыКонфигурации.ПолноеИмя КАК Наименование,
	|	ОбъектыКонфигурации.Ссылка КАК ОбъектКонфигурации,
	|	ОбъектыКонфигурации.ИмяФайла КАК ИмяФайла
	|ПОМЕСТИТЬ ВтНайденныеОбъектыКонфигураций
	|ИЗ
	|	Справочник.ОбъектыКонфигурации КАК ОбъектыКонфигурации
	|ГДЕ
	|	(ОбъектыКонфигурации.ПолноеИмя В
	|				(ВЫБРАТЬ
	|					Т.Наименование
	|				ИЗ
	|					ВтТЗ КАК Т)
	|			ИЛИ ОбъектыКонфигурации.ИмяФайла В
	|				(ВЫБРАТЬ
	|					Т.ИмяФайла
	|				ИЗ
	|					ВтТЗ КАК Т))
	|	И ОбъектыКонфигурации.Конфигурация = &Конфигурация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвойстваОбъектаКонфигурации.Ссылка КАК СвойствоОбъектаКонфигурации,
	|	СвойстваОбъектаКонфигурации.ПолноеИмя КАК НаименованиеСвойства,
	|	СвойстваОбъектаКонфигурации.ОбъектКонфигурации КАК ОбъектКонфигурации
	|ПОМЕСТИТЬ ВтСвойстваОбъектов
	|ИЗ
	|	Справочник.СвойстваОбъектаКонфигурации КАК СвойстваОбъектаКонфигурации
	|ГДЕ
	|	СвойстваОбъектаКонфигурации.ПолноеИмя В
	|			(ВЫБРАТЬ
	|				Т.НаименованиеСвойства
	|			ИЗ
	|				ВтТЗ КАК Т)
	|	И СвойстваОбъектаКонфигурации.ОбъектКонфигурации.Конфигурация = &Конфигурация
	|	И СвойстваОбъектаКонфигурации.ОбъектКонфигурации В
	|			(ВЫБРАТЬ
	|				Т.ОбъектКонфигурации
	|			ИЗ
	|				ВтНайденныеОбъектыКонфигураций КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтНайденныеОбъектыКонфигураций.Наименование КАК Наименование,
	|	ВтНайденныеОбъектыКонфигураций.ОбъектКонфигурации КАК ОбъектКонфигурации,
	|	ЕСТЬNULL(ВтСвойстваОбъектов.СвойствоОбъектаКонфигурации, ЗНАЧЕНИЕ(Справочник.СвойстваОбъектаКонфигурации.ПустаяСсылка)) КАК СвойствоОбъектаКонфигурации,
	|	ЕСТЬNULL(ВтСвойстваОбъектов.НаименованиеСвойства, """") КАК НаименованиеСвойства,
	|	ВтНайденныеОбъектыКонфигураций.ИмяФайла КАК ИмяФайла
	|ПОМЕСТИТЬ ВтДанные
	|ИЗ
	|	ВтНайденныеОбъектыКонфигураций КАК ВтНайденныеОбъектыКонфигураций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСвойстваОбъектов КАК ВтСвойстваОбъектов
	|		ПО ВтНайденныеОбъектыКонфигураций.ОбъектКонфигурации = ВтСвойстваОбъектов.ОбъектКонфигурации
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВтНайденныеОбъектыКонфигураций.Наименование,
	|	ВтНайденныеОбъектыКонфигураций.ОбъектКонфигурации,
	|	ЗНАЧЕНИЕ(Справочник.СвойстваОбъектаКонфигурации.ПустаяСсылка),
	|	"""",
	|	ВтНайденныеОбъектыКонфигураций.ИмяФайла
	|ИЗ
	|	ВтНайденныеОбъектыКонфигураций КАК ВтНайденныеОбъектыКонфигураций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбработанныеОбъектыКонфигурации.Конфигурация КАК Конфигурация,
	|	ОбработанныеОбъектыКонфигурации.ОбъектКонфигурации КАК ОбъектКонфигурации2,
	|	ОбработанныеОбъектыКонфигурации.СвойствоОбъектаКонфигурации КАК СвойствоОбъектаКонфигурации2,
	|	ОбработанныеОбъектыКонфигурации.Статус КАК СтарыйСтатус,
	|	ОбработанныеОбъектыКонфигурации.Дата КАК Дата,
	|	ОбработанныеОбъектыКонфигурации.Комментарий КАК Комментарий,
	|	ОбработанныеОбъектыКонфигурации.Ответственный КАК Ответственный,
	|	ВтДанные.Наименование КАК Наименование,
	|	ВтДанные.НаименованиеСвойства КАК НаименованиеСвойства,
	|	ВтДанные.ОбъектКонфигурации КАК ОбъектКонфигурации,
	|	ВтДанные.СвойствоОбъектаКонфигурации КАК СвойствоОбъектаКонфигурации,
	|	ВтДанные.ИмяФайла КАК ИмяФайла
	|ИЗ
	|	ВтДанные КАК ВтДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбработанныеОбъектыКонфигурации КАК ОбработанныеОбъектыКонфигурации
	|		ПО ВтДанные.ОбъектКонфигурации = ОбработанныеОбъектыКонфигурации.ОбъектКонфигурации
	|			И ВтДанные.СвойствоОбъектаКонфигурации = ОбработанныеОбъектыКонфигурации.СвойствоОбъектаКонфигурации
	|			И (ОбработанныеОбъектыКонфигурации.Сценарий = &Сценарий)
	|			И (ОбработанныеОбъектыКонфигурации.Конфигурация = &Конфигурация)";
	Запрос.УстановитьПараметр("ТЗ",ТаблицаЗначений);
	Запрос.УстановитьПараметр("Конфигурация",Конфигурация);
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СоответсвиеДанных = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл                                
		Структура = Новый Структура("Наименование,НаименованиеСвойства,ИмяФайла,ОбъектКонфигурации,СвойствоОбъектаКонфигурации,Статус,СтарыйСтатус");
		ЗаполнитьЗначенияСвойств(Структура,Выборка);
		Ключ = ""+Выборка.Наименование+"->"+Выборка.НаименованиеСвойства;
		СоответсвиеДанных.Вставить(Ключ,Структура);                      
		Если ЗначениеЗаполнено(Выборка.ИмяФайла) Тогда
			Ключ = ""+Выборка.ИмяФайла+"->";                                      
			СоответсвиеДанных.Вставить(Ключ,Структура);                      
		КонецЕсли;
	КонецЦикла;
	
	// проставим в таблице
	ТаблицаПреобразования.Очистить();
	Для каждого стр из ТаблицаЗначений Цикл
		стр_н = ТаблицаПреобразования.Добавить();
		Ключ = ""+стр.Наименование+"->"+стр.НаименованиеСвойства;
		нашли_полный = СоответсвиеДанных.Получить(Ключ);
		Ключ = ""+стр.Наименование+"->";
		нашли = СоответсвиеДанных.Получить(Ключ);
		Ключ = ""+стр.ИмяФайла+"->";         
		файл = СоответсвиеДанных.Получить(Ключ);
		Если НЕ нашли_полный=Неопределено Тогда
			ЗаполнитьЗначенияСвойств(стр_н,нашли_полный);
			стр_н.Выбрана = Истина;
		ИначеЕсли НЕ нашли=Неопределено Тогда
			ЗаполнитьЗначенияСвойств(стр_н,нашли);
			стр_н.НаименованиеСвойства = стр.НаименованиеСвойства;
			стр_н.Выбрана = Ложь;
		ИначеЕсли НЕ файл=Неопределено Тогда
			ЗаполнитьЗначенияСвойств(стр_н,файл);
			стр_н.Выбрана = Истина;
		Иначе
			стр_н.Наименование = стр.Наименование;
			стр_н.НаименованиеСвойства = стр.НаименованиеСвойства;
		КонецЕсли;
		стр_н.Статус = СтатусОбработки;
		стр_н.Приоритет = Перечисления.Приоритеты.Основной;
		стр_н.Комментарий = Комментарий;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для каждого стр из ТаблицаПреобразования Цикл
		стр.Выбрана = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для каждого стр из ТаблицаПреобразования Цикл
		стр.Выбрана = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда) 
	Если НЕ ЗначениеЗаполнено(Конфигурация) Тогда
		Сообщить("Укажите конфигурацию!");
		Возврат;
	КонецЕсли;
	ЗаписатьИЗакрытьНаСервере(); 
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИЗакрытьНаСервере()
	
	Для каждого стр из ТаблицаПреобразования Цикл
		Если НЕ стр.Выбрана Тогда
			Продолжить;
		КонецЕсли;   
		
		Если НЕ ЗначениеЗаполнено(стр.ОбъектКонфигурации) Тогда
			Продолжить;
		КонецЕсли;    
		
		Если НЕ ЗначениеЗаполнено(стр.Статус) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.ОбработанныеОбъектыКонфигурации.СоздатьНаборЗаписей();
		НаборЗаписей.Записывать = Истина;
		
		НаборЗаписей.Отбор.Конфигурация.Установить(Конфигурация);
		НаборЗаписей.Отбор.ОбъектКонфигурации.Установить(стр.ОбъектКонфигурации);
		НаборЗаписей.Отбор.СвойствоОбъектаКонфигурации.Установить(стр.СвойствоОбъектаКонфигурации);
		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество()=0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Конфигурация = Конфигурация;
			НоваяЗапись.Ответственный = Ответственный;
			НоваяЗапись.Дата = ?(ЗначениеЗаполнено(ДатаОбработки),ДатаОбработки,ТекущаяДата());
			ЗаполнитьЗначенияСвойств(НоваяЗапись,стр);
			Если НЕ ЗначениеЗаполнено(НоваяЗапись.Приоритет) Тогда
				НоваяЗапись.Приоритет=Перечисления.Приоритеты.Основной;
			КонецЕсли;
		ИначеЕсли НаборЗаписей.Количество()=1 Тогда
			Запись = НаборЗаписей[0];                 
			ЗаполнитьЗначенияСвойств(Запись,стр,,"Приоритет");  
			Запись.Дата = ?(ЗначениеЗаполнено(ДатаОбработки),ДатаОбработки,ТекущаяДата());
			Если ПерезаписыватьОтветственного=Истина ИЛИ НЕ ЗначениеЗаполнено(Запись.Ответственный) Тогда
				Запись.Ответственный = Ответственный;
			КонецЕсли;    
			Если ИзменитьПриоритет=Истина И ЗначениеЗаполнено(стр.Приоритет) Тогда
				Запись.Приоритет = стр.Приоритет;
			КонецЕсли;
		ИначеЕсли НаборЗаписей.Количество()>1 Тогда
			Сообщить("Пока не поддерживается запись свойст объектов!");
		КонецЕсли;
		
		НаборЗаписей.Записать(Истина);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	Если НЕ ЗначениеЗаполнено(Конфигурация) Тогда
		Сообщить("Укажите конфигурацию!");
		Возврат;
	КонецЕсли;
	ЗаписатьИЗакрытьНаСервере();
КонецПроцедуры
