
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТолькоПоставщика=Ложь и ТолькоНовойКонфигурации=Ложь Тогда
		ТолькоПоставщика=Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКфайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	Диалог.Заголовок = "Выберите файл"; 
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "XML-файл (*.xml)|*.xml"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь; 
	ВыборФайлаОткрытияСтруктурыКонфигурации = новый ОписаниеОповещения("ВыборФайлаОткрытияСтруктурыКонфигурации",ЭтотОбъект);
	Диалог.Показать(ВыборФайлаОткрытияСтруктурыКонфигурации);
КонецПроцедуры


&НаКлиенте
Процедура ВыборФайлаОткрытияСтруктурыКонфигурации(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	 Если ВыбранныеФайлы <> Неопределено И ВыбранныеФайлы.Количество() > 0 Тогда
		ПутьКфайлу = ВыбранныеФайлы[0]; 
	КонецЕсли; 
	
КонецПроцедуры  


&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для каждого стр из ТаблицаМетаданных Цикл
		стр.Выбрана = Ложь;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для каждого стр из ТаблицаМетаданных Цикл
		стр.Выбрана = Истина;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ПрочитатьФайл(Команда)
	
	// читаем файл по объектами и заносим данные к обработке
	ВыполнитьОбработкуФайлаСравнения(ПутьКфайлу);	
	
КонецПроцедуры    

&НаКлиенте
Процедура ВыполнитьОбработкуФайлаСравнения(ИмяФайла)
	
	Попытка
		ТаблицаМетаданных.Очистить();
		
		ИмяФайлаОбменаКИСУС=ИмяФайла; 
		ФайлОбменаКИСУС = Новый ЧтениеXML; 
		ФайлОбменаКИСУС.ОткрытьФайл(ИмяФайлаОбменаКИСУС); 
		
		ПостроительDOM = Новый ПостроительDOM; 
		ДокументDOM = ПостроительDOM.Прочитать(ФайлОбменаКИСУС); 
		ФайлОбменаКИСУС.Закрыть();          
		
		ДанныеДляПоиска = СтрРазделить(СписокПрефиксов," ;"+Символы.ПС,Ложь);		

		Состояние("Обработка DOM XML...");
		
		
		Для каждого стр из ДокументDOM.ДочерниеУзлы Цикл 
			для каждого стр1 из стр.ДочерниеУзлы Цикл 
				
				ш=0;  
				к=0;
				для каждого стр2 из стр1.ДочерниеУзлы Цикл 
					
					ш=ш+1;      
					к=к-1;

					Если стр2.ИмяУзла="Object" Тогда
						
						ПрочитатьОбъектыФайлаИзмененияКонфы(ДокументDOM, стр2);
						
					КонецЕсли; 
					
					Если к<=0 Тогда
						Состояние("Обработка узлов Object..."+стр,Окр(ш/стр1.ДочерниеУзлы.Количество()*100));						
						к=1000;
					КонецЕсли;
					
				КонецЦикла;
				
			кОНЕЦцИКЛА;	
		кОНЕЦцИКЛА; 
		
		Состояние("Завершение обработки DOM XML...");
		
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура ПрочитатьОбъектыФайлаИзмененияКонфы(ДокументDOM, стр2)
	
	
	// модуль есть
	Если НЕ стр2.ПолучитьАтрибут("fullName")=Неопределено  И ТолькоПоставщика=Истина Тогда 

		// добавим метаданные
		ДобавитьСтрокуТаблицы(стр2.ПолучитьАтрибут("fullName"));

		// теперь поищем форму и макет
		//Properties = НайтиУзлаПоИмениИАтрибуту(стр2.ДочерниеУзлы,"Properties");			
		//Если НЕ Properties=Неопределено Тогда
		//	Property = НайтиУзлаПоИмениИАтрибуту(Properties.ДочерниеУзлы,"Property","name","Module");			
		//	Если НЕ Property=Неопределено Тогда                          
		//		MergeRule = НайтиУзлаПоИмениИАтрибуту(Property.ДочерниеУзлы,"MergeRule");
		//		Если MergeRule=Неопределено Тогда
		//			//MergeRule = ДобавитьУзелИТекстовоеЗначение(ДокументDOM,Property,"MergeRule","GetFromSecondConfiguration");
		//		Иначе
		//			//MergeRule.ТекстовоеСодержимое="GetFromSecondConfiguration";
		//		КонецЕсли;						
		//	КонецЕсли;			
		//КонецЕсли;
		
		// модуля нет
	Иначеесли НЕ стр2.ПолучитьАтрибут("fullNameInSecondConfiguration")=Неопределено И ТолькоНовойКонфигурации=Истина Тогда
		
		// добавим метаданные
		ДобавитьСтрокуТаблицы(стр2.ПолучитьАтрибут("fullNameInSecondConfiguration"));

		//MergeRule = НайтиУзлаПоИмениИАтрибуту(стр2.ДочерниеУзлы,"MergeRule");
		//Если MergeRule=Неопределено Тогда
		//	//MergeRule = ДобавитьУзелИТекстовоеЗначение(ДокументDOM,стр2,"MergeRule","GetFromSecondConfiguration");
		//Иначе
		//	//MergeRule.ТекстовоеСодержимое="GetFromSecondConfiguration";
		//КонецЕсли;		
		
	КонецЕсли;
	
	
КонецПроцедуры      

&НаКлиенте
Процедура ДобавитьСтрокуТаблицы(Знач ПолноеИмя )
	
	ЭтоМетаданные = Истина;
	МассивЧастей = СтрРазделить(ПолноеИмя,".",Ложь);
	МассивЧастей[0] = НаименованиеМетаданныхEngToRus(МассивЧастей[0]);
	ПолноеИмя = СтрСоединить(МассивЧастей,".");
	
	// костыль, но я затрахался
	ПолноеИмя = СтрЗаменить(ПолноеИмя,".Form.",".Форма.");
	ПолноеИмя = СтрЗаменить(ПолноеИмя,".Template.",".Макет.");
	ПолноеИмя = СтрЗаменить(ПолноеИмя,".TabularSection.",".ТабличнаяЧасть.");     
	ПолноеИмя = СтрЗаменить(ПолноеИмя,".Command.",".Command.");     
	ПолноеИмя = СтрЗаменить(ПолноеИмя,".Attribute.",".Атрибут.");   
	
	Если Найти(ПолноеИмя,".Форма.")
		ИЛИ Найти(ПолноеИмя,".Макет.") 
		ИЛИ Найти(ПолноеИмя,".ТабличнаяЧасть.") 
		ИЛИ Найти(ПолноеИмя,".Command.") 
		ИЛИ Найти(ПолноеИмя,".Атрибут.") 
		Тогда
		ЭтоМетаданные = Ложь;		
	КонецЕсли;
	
	стр_н = ТаблицаМетаданных.Добавить();
	стр_н.ПолноеИмя = ПолноеИмя;
	стр_н.ЭтоМетаданные = ЭтоМетаданные;
	стр_н.Статус = ПредопределенноеЗначение("Перечисление.СтатусыОбработки.ТребуетсяОбработка");
	стр_н.Приоритет = ПредопределенноеЗначение("Перечисление.Приоритеты.Основной");
	
	
КонецПроцедуры

&НаКлиенте
Функция НаименованиеМетаданныхRusToEng(Знач ТипМетаданныхСтрокой)
	Синоним = ТипМетаданныхСтрокой;
	
	Если ТипМетаданныхСтрокой="ОбщийМодуль" Тогда
		Синоним = "CommonModule";
	ИначеЕсли ТипМетаданныхСтрокой="Константа" Тогда
		Синоним = "Constant";		
	ИначеЕсли ТипМетаданныхСтрокой="Справочник" Тогда
		Синоним = "Catalog";
	ИначеЕсли ТипМетаданныхСтрокой="Перечисление" Тогда
		Синоним = "Enum";
	ИначеЕсли ТипМетаданныхСтрокой="Документ" Тогда
		Синоним = "Document";
	ИначеЕсли ТипМетаданныхСтрокой="РегистрНакопления" Тогда
		Синоним = "AccumulationRegister";
	ИначеЕсли ТипМетаданныхСтрокой="РегистрСведений" Тогда
		Синоним = "InformationRegister";
	ИначеЕсли ТипМетаданныхСтрокой="Задача" Тогда
		Синоним = "Task";
	ИначеЕсли ТипМетаданныхСтрокой="БизнесПроцесс" Тогда
		Синоним = "BusinessProcess";
	ИначеЕсли ТипМетаданныхСтрокой="ПланОбмена" Тогда
		Синоним = "ExchangePlan";
	ИначеЕсли ТипМетаданныхСтрокой="ВнешнийИсточникДанных" Тогда
		Синоним = "ExternalDataSource";
	ИначеЕсли ТипМетаданныхСтрокой="ПланВидовХарактеристик" Тогда
		Синоним = "ChartOfCharacteristicTypes";
	ИначеЕсли ТипМетаданныхСтрокой="Обработка" Тогда
		Синоним = "DataProcessor";
	ИначеЕсли ТипМетаданныхСтрокой="Отчет" Тогда
		Синоним = "Report";   
	ИначеЕсли ТипМетаданныхСтрокой="ОбщаяФорма" Тогда
		Синоним = "CommonForm";	
	ИначеЕсли ТипМетаданныхСтрокой="ОпределяемыйТип" Тогда
		Синоним = "DefinedType";			
	ИначеЕсли ТипМетаданныхСтрокой="ВнешнийОтчет" Тогда
		Синоним = "ExternalReport";   		                           
	ИначеЕсли ТипМетаданныхСтрокой="ВнешняяОбработка" Тогда
		Синоним = "ExternalDataProcessor";   		                           
		
		
	ИначеЕсли ТипМетаданныхСтрокой="НумераторДокументов" Тогда       
		Синоним = "DocumentNumerator";                           
		
		
	ИначеЕсли ТипМетаданныхСтрокой="ОбщийМакет" Тогда
		Синоним = "CommonTemplate";		
	ИначеЕсли ТипМетаданныхСтрокой="Подсистема" Тогда
		Синоним = "Subsystem";
	ИначеЕсли ТипМетаданныхСтрокой="ПодпискаНаСобытие" Тогда
		Синоним = "EventSubscription";
	ИначеЕсли ТипМетаданныхСтрокой="ОбщаяКартинка" Тогда
		Синоним = "CommonPicture";
	ИначеЕсли ТипМетаданныхСтрокой="ОбщаяКоманда" Тогда
		Синоним = "CommonCommand";
	ИначеЕсли ТипМетаданныхСтрокой="Роль" Тогда
		Синоним = "Role";
	ИначеЕсли ТипМетаданныхСтрокой="ГруппаКоманд" Тогда
		Синоним = "CommandGroup";
	ИначеЕсли ТипМетаданныхСтрокой="HTTPСервис" Тогда
		Синоним = "HTTPService";
	ИначеЕсли ТипМетаданныхСтрокой="Стиль" Тогда
		Синоним = "Style";
	ИначеЕсли ТипМетаданныхСтрокой="ЭлементСтиля" Тогда
		Синоним = "StyleItem";
	ИначеЕсли ТипМетаданныхСтрокой="КритерийОтбора" Тогда
		Синоним = "FilterCriterion";
	ИначеЕсли ТипМетаданныхСтрокой="РегламентноеЗадание" Тогда
		Синоним = "ScheduledJob";
	ИначеЕсли ТипМетаданныхСтрокой="ПараметрСеанса" Тогда
		Синоним = "SessionParameter";
	ИначеЕсли ТипМетаданныхСтрокой="ФункциональнаяОпция" Тогда
		Синоним = "FunctionalOption";
	ИначеЕсли ТипМетаданныхСтрокой="" Тогда
		Синоним = "";
		
		
	КонецЕсли;
	
	Возврат Синоним;
КонецФункции

&НаКлиенте
Функция НаименованиеМетаданныхEngToRus(Знач ТипМетаданныхСтрокой)
	Синоним = ТипМетаданныхСтрокой;
	
	Если ТипМетаданныхСтрокой="CommonModule" Тогда
		Синоним = "ОбщийМодуль";
	ИначеЕсли ТипМетаданныхСтрокой="Constant" Тогда
		Синоним = "Константа";		
	ИначеЕсли ТипМетаданныхСтрокой="Catalog" Тогда
		Синоним = "Справочник";
	ИначеЕсли ТипМетаданныхСтрокой="Enum" Тогда
		Синоним = "Перечисление";
	ИначеЕсли ТипМетаданныхСтрокой="Document" Тогда
		Синоним = "Документ";
	ИначеЕсли ТипМетаданныхСтрокой="AccumulationRegister" Тогда
		Синоним = "РегистрНакопления";
	ИначеЕсли ТипМетаданныхСтрокой="InformationRegister" Тогда
		Синоним = "РегистрСведений";
	ИначеЕсли ТипМетаданныхСтрокой="Task" Тогда
		Синоним = "Задача";
	ИначеЕсли ТипМетаданныхСтрокой="BusinessProcess" Тогда
		Синоним = "БизнесПроцесс";
	ИначеЕсли ТипМетаданныхСтрокой="ExchangePlan" Тогда
		Синоним = "ПланОбмена";
	ИначеЕсли ТипМетаданныхСтрокой="ExternalDataSource" Тогда
		Синоним = "ВнешнийИсточникДанных";
	ИначеЕсли ТипМетаданныхСтрокой="ChartOfCharacteristicTypes" Тогда
		Синоним = "ПланВидовХарактеристик";
	ИначеЕсли ТипМетаданныхСтрокой="DataProcessor" Тогда
		Синоним = "Обработка";
	ИначеЕсли ТипМетаданныхСтрокой="Report" Тогда
		Синоним = "Отчет";   
	ИначеЕсли ТипМетаданныхСтрокой="CommonForm" Тогда
		Синоним = "ОбщаяФорма";	
	ИначеЕсли ТипМетаданныхСтрокой="DefinedType" Тогда
		Синоним = "ОпределяемыйТип";			
	ИначеЕсли ТипМетаданныхСтрокой="ExternalReport" Тогда
		Синоним = "ВнешнийОтчет";   		                           
	ИначеЕсли ТипМетаданныхСтрокой="ExternalDataProcessor" Тогда
		Синоним = "ВнешняяОбработка";   		                           
		
		
	ИначеЕсли ТипМетаданныхСтрокой="DocumentNumerator" Тогда       
		Синоним = "НумераторДокументов";                           
		
		
	ИначеЕсли ТипМетаданныхСтрокой="CommonTemplate" Тогда
		Синоним = "ОбщийМакет";		
	ИначеЕсли ТипМетаданныхСтрокой="Subsystem" Тогда
		Синоним = "Подсистема";
	ИначеЕсли ТипМетаданныхСтрокой="EventSubscription" Тогда
		Синоним = "ПодпискаНаСобытие";
	ИначеЕсли ТипМетаданныхСтрокой="CommonPicture" Тогда
		Синоним = "ОбщаяКартинка";
	ИначеЕсли ТипМетаданныхСтрокой="CommonCommand" Тогда
		Синоним = "ОбщаяКоманда";
	ИначеЕсли ТипМетаданныхСтрокой="Role" Тогда
		Синоним = "Роль";
	ИначеЕсли ТипМетаданныхСтрокой="CommandGroup" Тогда
		Синоним = "ГруппаКоманд";
	ИначеЕсли ТипМетаданныхСтрокой="HTTPService" Тогда
		Синоним = "HTTPСервис";
	ИначеЕсли ТипМетаданныхСтрокой="Style" Тогда
		Синоним = "Стиль";
	ИначеЕсли ТипМетаданныхСтрокой="StyleItem" Тогда
		Синоним = "ЭлементСтиля"  ;
	ИначеЕсли ТипМетаданныхСтрокой="FilterCriterion" Тогда
		Синоним = "КритерийОтбора";
	ИначеЕсли ТипМетаданныхСтрокой="ScheduledJob" Тогда
		Синоним = "РегламентноеЗадание";
	ИначеЕсли ТипМетаданныхСтрокой="SessionParameter" Тогда
		Синоним = "ПараметрСеанса";
	ИначеЕсли ТипМетаданныхСтрокой="FunctionalOption" Тогда
		Синоним = "ФункциональнаяОпция";
	ИначеЕсли ТипМетаданныхСтрокой="" Тогда
		Синоним = "";
		
		
	КонецЕсли;
	
	Возврат Синоним;
КонецФункции



&НаКлиенте
Функция НайтиУзлаПоИмениИАтрибуту(ДочерниеУзлы,Знач ИмяУзла,Знач ИмяАтрибута="",Знач ЗначениеАтрибута="")
	Для каждого стр из ДочерниеУзлы Цикл
		Если НРег(стр.ИмяУзла)=НРег(ИмяУзла) И ИмяАтрибута="" Тогда
			Возврат стр;
		ИначеЕсли НРег(стр.ИмяУзла)=НРег(ИмяУзла) 
			И ЗначениеЗаполнено(ИмяАтрибута) 
			И НЕ стр.ПолучитьАтрибут(ИмяАтрибута)=Неопределено 
			И НРег(стр.ПолучитьАтрибут(ИмяАтрибута))=НРег(ЗначениеАтрибута) Тогда 
			Возврат стр;
		КонецЕсли;
	КонецЦикла;         
	Возврат Неопределено;
КонецФункции




&НаКлиенте
Процедура НайтиСоответствие(Команда)
	Если НЕ ЗначениеЗаполнено(Конфигурация) Тогда
		Сообщить("Укажите конфигурацию!");
		Возврат;
	КонецЕсли;
	
	НайтиСоответствиеСервер();
КонецПроцедуры


&НаСервере
Процедура НайтиСоответствиеСервер()


	// 3 находим данные
	Запрос = Новый Запрос;                                
	Запрос.Текст = "ВЫБРАТЬ
	|	ОбъектыКонфигурации.Ссылка КАК ОбъектКонфигурации,
	|	ОбъектыКонфигурации.ПолноеИмя КАК ПолноеИмя
	|ИЗ
	|	Справочник.ОбъектыКонфигурации КАК ОбъектыКонфигурации
	|ГДЕ
	|	ОбъектыКонфигурации.Конфигурация = &Конфигурация
	|	И НЕ ОбъектыКонфигурации.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвойстваОбъектаКонфигурации.Ссылка КАК СвойствоОбъектаКонфигурации,
	|	СвойстваОбъектаКонфигурации.Ссылка.ОбъектКонфигурации КАК ОбъектКонфигурации,
	|	СвойстваОбъектаКонфигурации.ПолноеИмя КАК ПолноеИмя
	|ИЗ
	|	Справочник.СвойстваОбъектаКонфигурации КАК СвойстваОбъектаКонфигурации
	|ГДЕ
	|	СвойстваОбъектаКонфигурации.ОбъектКонфигурации.Конфигурация = &Конфигурация
	|	И НЕ СвойстваОбъектаКонфигурации.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбработанныеОбъектыКонфигурации.Конфигурация КАК Конфигурация,
	|	ОбработанныеОбъектыКонфигурации.ОбъектКонфигурации КАК ОбъектКонфигурации,
	|	ОбработанныеОбъектыКонфигурации.СвойствоОбъектаКонфигурации КАК СвойствоОбъектаКонфигурации,
	|	ОбработанныеОбъектыКонфигурации.Статус КАК Статус,
	|	ОбработанныеОбъектыКонфигурации.Ответственный КАК Ответственный,
	|	ОбработанныеОбъектыКонфигурации.Комментарий КАК Комментарий,
	|	ОбработанныеОбъектыКонфигурации.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ОбработанныеОбъектыКонфигурации.СвойствоОбъектаКонфигурации = ЗНАЧЕНИЕ(Справочник.СвойстваОбъектаКонфигурации.ПустаяСсылка)
	|			ТОГДА ОбработанныеОбъектыКонфигурации.ОбъектКонфигурации.ПолноеИмя
	|		ИНАЧЕ ОбработанныеОбъектыКонфигурации.СвойствоОбъектаКонфигурации.ПолноеИмя
	|	КОНЕЦ КАК ПолноеИмя
	|ИЗ
	|	РегистрСведений.ОбработанныеОбъектыКонфигурации КАК ОбработанныеОбъектыКонфигурации
	|ГДЕ
	|	ОбработанныеОбъектыКонфигурации.Конфигурация = &Конфигурация";
	Запрос.УстановитьПараметр("ТЗ",ТаблицаМетаданных);
	Запрос.УстановитьПараметр("Конфигурация",Конфигурация);
	
	РезультатПакет = Запрос.ВыполнитьПакет();
	
	СоответсвиеДанных = Новый Соответствие;
	
	Выборка = РезультатПакет[0].Выбрать();
	Пока Выборка.Следующий() Цикл                                
		Структура = Новый Структура("ПолноеИмя,ОбъектКонфигурации,СвойствоОбъектаКонфигурации,СтарыйСтатус,Дата,Ответственный");
		ЗаполнитьЗначенияСвойств(Структура,Выборка);
		СоответсвиеДанных.Вставить(НРег(Выборка.ПолноеИмя),Структура);                      
	КонецЦикла;
	
	Выборка = РезультатПакет[1].Выбрать();
	Пока Выборка.Следующий() Цикл                                
		Структура = Новый Структура("ПолноеИмя,ОбъектКонфигурации,СвойствоОбъектаКонфигурации,СтарыйСтатус,Дата,Ответственный");
		ЗаполнитьЗначенияСвойств(Структура,Выборка);
		СоответсвиеДанных.Вставить(НРег(Выборка.ПолноеИмя),Структура);                      
	КонецЦикла;
	
	Выборка = РезультатПакет[2].Выбрать();
	Пока Выборка.Следующий() Цикл                                
		Структура = СоответсвиеДанных.Получить(НРег(Выборка.ПолноеИмя));
		Если НЕ Структура=Неопределено Тогда
			Структура.СтарыйСтатус = Выборка.Статус;
			Структура.Дата = Выборка.Дата;
			Структура.Ответственный = Выборка.Ответственный;
		КонецЕсли;
	КонецЦикла;	
	
	// проставим в таблице
	Для каждого стр из ТаблицаМетаданных Цикл
		Структура = СоответсвиеДанных.Получить(НРег(стр.ПолноеИмя));
		Если НЕ Структура=Неопределено Тогда
			стр.ОбъектКонфигурации = Структура.ОбъектКонфигурации;
			стр.СвойствоОбъектаКонфигурации = Структура.СвойствоОбъектаКонфигурации;
			стр.СтарыйСтатус = Структура.СтарыйСтатус;
			стр.Дата = Структура.Дата;
			стр.Ответственный = ?(ЗначениеЗаполнено(Структура.Ответственный),Структура.Ответственный,Ответственный);
			стр.Выбрана = Ложь;
			Если НЕ ЗначениеЗаполнено(стр.СтарыйСтатус) Тогда
				стр.Выбрана = Истина;
			КонецЕсли;
		Иначе
			стр.Выбрана = Ложь;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры




&НаКлиенте
Процедура ВыполнитьЗагрузкуДанных(Команда)
	
	Если НЕ ЗначениеЗаполнено(Конфигурация) Тогда
		Сообщить("Укажите конфигурацию!");
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗагрузкуДанныхСервер();	
КонецПроцедуры




&НаСервере
Процедура ВыполнитьЗагрузкуДанныхСервер()
	
	Для каждого стр из ТаблицаМетаданных Цикл
		
		Если стр.Выбрана=Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(стр.ОбъектКонфигурации) И НЕ ЗначениеЗаполнено(стр.СвойствоОбъектаКонфигурации) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(стр.Статус) Тогда
			Продолжить;
		КонецЕсли;
		
		
		НаборЗаписей = РегистрыСведений.ОбработанныеОбъектыКонфигурации.СоздатьНаборЗаписей();
		НаборЗаписей.Записывать = Истина;
		
		НаборЗаписей.Отбор.Конфигурация.Установить(Конфигурация);
		НаборЗаписей.Отбор.ОбъектКонфигурации.Установить(стр.ОбъектКонфигурации);
		НаборЗаписей.Отбор.СвойствоОбъектаКонфигурации.Установить(стр.СвойствоОбъектаКонфигурации);
		
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество()=0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Конфигурация = Конфигурация;
			НоваяЗапись.Дата = ?(ЗначениеЗаполнено(ДатаОбработки),ДатаОбработки,ТекущаяДата());
			ЗаполнитьЗначенияСвойств(НоваяЗапись,стр);
		Иначе
			Сообщить("Можно только добавить требуемые к обработке, обновить нельзя!");
		КонецЕсли;
		
		НаборЗаписей.Записать(Истина);
		
		
		
	КонецЦикла;
	
КонецПроцедуры