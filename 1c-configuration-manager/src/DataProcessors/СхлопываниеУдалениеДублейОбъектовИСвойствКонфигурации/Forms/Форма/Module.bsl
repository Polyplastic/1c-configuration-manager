
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
КонецПроцедуры

&НаКлиенте
Процедура НайтиДубли(Команда)
	НайтиДублиНаСервере();
КонецПроцедуры

&НаСервере
Процедура НайтиДублиНаСервере()
	
	ТаблицаДублей.Очистить();
	////МассивТипов = СтрРазделить(СписокМетаданных,Символы.ПС+"; ",Ложь);
	////
	////Для каждого тип_строкой из МассивТипов Цикл
	////	
	////	МассивЧастей = СтрРазделить(тип_строкой,".");
	////	
	////	// получим все данные
	////	
	////	
	////КонецЦикла;
	
	НайтиДублиОбъектовСервер();
	НайтиДублиСвойствОбъектовСервер();
	ТаблицаДублей.Сортировать("КлючДубля");
	
КонецПроцедуры    


&НаСервере
Процедура НайтиДублиОбъектовСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Т.ПолноеИмя КАК ПолноеИмя,
	|	КОЛИЧЕСТВО(Т.Ссылка) КАК КоличествоДублей,
	|	АВТОНОМЕРЗАПИСИ() КАК АвтоНомер
	|ПОМЕСТИТЬ ВтДубли
	|ИЗ
	|	Справочник.ОбъектыКонфигурации КАК Т
	|ГДЕ
	|	Т.Конфигурация = &Конфигурация
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ПолноеИмя
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Т.Ссылка) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Ссылка КАК Ссылка,
	|	Т.ПолноеИмя КАК ПолноеИмя,
	|	ВтДубли.АвтоНомер КАК АвтоНомер,
	|	ВтДубли.КоличествоДублей КАК КоличествоДублей
	|ИЗ
	|	Справочник.ОбъектыКонфигурации КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДубли КАК ВтДубли
	|		ПО Т.ПолноеИмя = ВтДубли.ПолноеИмя
	|			И (Т.Конфигурация = &Конфигурация)";
	
	Запрос.УстановитьПараметр("Конфигурация",Конфигурация);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр из ТаблицаДанных Цикл
		стр_н = ТаблицаДублей.Добавить();
		стр_н.Ссылка = стр.Ссылка;
		стр_н.КлючДубля = "Об "+стр.АвтоНомер;
		стр_н.КоличествоДублей = стр.КоличествоДублей;
		стр_н.Выбрана = Истина;
	КонецЦикла;
	
КонецПроцедуры      

&НаСервере
Процедура НайтиДублиСвойствОбъектовСервер()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Т.ПолноеИмя КАК ПолноеИмя,
	|	КОЛИЧЕСТВО(Т.Ссылка) КАК КоличествоДублей,
	|	АВТОНОМЕРЗАПИСИ() КАК АвтоНомер
	|ПОМЕСТИТЬ ВтДубли
	|ИЗ
	|	Справочник.СвойстваОбъектаКонфигурации КАК Т
	|ГДЕ
	|	Т.ОбъектКонфигурации.Конфигурация = &Конфигурация
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ПолноеИмя
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Т.Ссылка) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Ссылка КАК Ссылка,
	|	Т.ПолноеИмя КАК ПолноеИмя,
	|	ВтДубли.АвтоНомер КАК АвтоНомер,
	|	ВтДубли.КоличествоДублей КАК КоличествоДублей
	|ИЗ
	|	Справочник.СвойстваОбъектаКонфигурации КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДубли КАК ВтДубли
	|		ПО Т.ПолноеИмя = ВтДубли.ПолноеИмя
	|			И (Т.ОбъектКонфигурации.Конфигурация = &Конфигурация)";
	
	Запрос.УстановитьПараметр("Конфигурация",Конфигурация);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр из ТаблицаДанных Цикл
		стр_н = ТаблицаДублей.Добавить();
		стр_н.Ссылка = стр.Ссылка;
		стр_н.КлючДубля = "СвОб "+стр.АвтоНомер;
		стр_н.КоличествоДублей = стр.КоличествоДублей;
		стр_н.Выбрана = Истина;
	КонецЦикла;
	
КонецПроцедуры 



&НаКлиенте
Процедура НайтиОсновной(Команда)
	НайтиОсновнойСервере();
КонецПроцедуры

&НаСервере
Процедура НайтиОсновнойСервере()
	
	Соответствие = Новый Соответствие;
	
	Для каждого стр из ТаблицаДублей Цикл
		Если стр.Выбрана=Ложь Тогда
			Продолжить;
		КонецЕсли;            
		Структура = Соответствие.Получить(стр.КлючДубля);
		Если Структура=Неопределено Тогда
			Структура = Новый Структура;
			Структура.Вставить("Массив",Новый Массив);
			Структура.Вставить("Соответствие",Новый Соответствие);
		КонецЕсли;
		Структура.Массив.Добавить(стр.Ссылка);
		Структура.Соответствие.Вставить(стр.Ссылка,стр);
		Соответствие.Вставить(стр.КлючДубля,Структура);
	КонецЦикла;	                    
	
	Для каждого стр из Соответствие Цикл
		Структура = стр.Значение;
		ТаблицаНайденныхСсылок = НайтиПоСсылкам(Структура.Массив);
		
		// когда 0, тогда любая ссылка, но мы возьмем первую
		Если ТаблицаНайденныхСсылок.Количество()=0 Тогда
			Для каждого рез из Структура.Соответствие Цикл
				рез.Значение.Основной = Истина;
				Прервать;
			КонецЦикла;				
		Иначе
			// посчитаем количество ссылок
			Для каждого рез из ТаблицаНайденныхСсылок Цикл
				стр_табл = Структура.Соответствие.Получить(рез.Ссылка);
				стр_табл.КоличествоСсылок=стр_табл.КоличествоСсылок+1;
			КонецЦикла; 
			// найдем основной
			МакСсылок = 0;
			Для каждого рез из Структура.Соответствие Цикл
				Если МакСсылок<рез.Значение.КоличествоСсылок Тогда
					МакСсылок = рез.Значение.КоличествоСсылок;
				КонецЕсли;
			КонецЦикла;	    
			// проставим на первый основной
			Для каждого рез из Структура.Соответствие Цикл
				Если МакСсылок=рез.Значение.КоличествоСсылок Тогда
					рез.Значение.Основной = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры     




&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для каждого стр из ТаблицаДублей Цикл
		стр.Выбрана = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для каждого стр из ТаблицаДублей Цикл
		стр.Выбрана = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДубли(Команда)
	ОбработатьДублиСервер();
КонецПроцедуры

&НаСервере
Процедура ОбработатьДублиСервер()   
	// удаляем пустые
	Для каждого стр из ТаблицаДублей Цикл
		Если стр.Выбрана=Ложь Тогда
			Продолжить;
		КонецЕсли; 		
		Если УдалятьПринудительноДубли=Истина И стр.КоличествоСсылок=0 И НЕ стр.Основной=Истина Тогда
			СправочникОбъект = стр.Ссылка.ПолучитьОбъект();
			Попытка
				СправочникОбъект.Удалить();
				стр.Комментарий = "Удален успешно!";
			Исключение   
				ТекстОшибки = ОписаниеОшибки();
				стр.Комментарий = ТекстОшибки;
			Конецпопытки;
		КонецЕсли;
	КонецЦикла;   
	// обрабатываем с перебросом ссылок, без удаления
	Для каждого стр из ТаблицаДублей Цикл
		Если стр.Выбрана=Ложь Тогда
			Продолжить;
		КонецЕсли; 	
		
		Если стр.Основной=Истина Тогда
			Продолжить;
		КонецЕсли;
		
		мОтбор = Новый Структура("КлючДубля,Основной",стр.КлючДубля,Истина);
		
		н_строки = ТаблицаДублей.НайтиСтроки(мОтбор);
		
		Если н_строки.Количество()<>1 Тогда
			Продолжить;
		КонецЕсли;
		
		
		СсылкаОсновная = н_строки[0].Ссылка;
		// найдем ссылки
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(стр.Ссылка);
		
		ТаблицаНайденныхСсылок = НайтиПоСсылкам(МассивСсылок);
		
		Если ТаблицаНайденныхСсылок.Количество()=0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого стр из ТаблицаНайденныхСсылок Цикл
			
			Если стр.Метаданные = Метаданные.РегистрыСведений.ОбработанныеОбъектыКонфигурации Тогда
				
				Если ТипЗнч(стр.Данные)=Тип("РегистрСведенийКлючЗаписи.ОбработанныеОбъектыКонфигурации") Тогда
					
					
					НаборЗаписей = РегистрыСведений.ОбработанныеОбъектыКонфигурации.СоздатьНаборЗаписей();
					НаборЗаписейНовый = РегистрыСведений.ОбработанныеОбъектыКонфигурации.СоздатьНаборЗаписей();
					НаборЗаписей.Записывать = Истина;
					НаборЗаписейНовый.Записывать = Истина;
					
					НаборЗаписей.Отбор.Конфигурация.Установить(стр.Данные.Конфигурация);
					НаборЗаписей.Отбор.ОбъектКонфигурации.Установить(стр.Данные.ОбъектКонфигурации);
					НаборЗаписей.Отбор.СвойствоОбъектаКонфигурации.Установить(стр.Данные.СвойствоОбъектаКонфигурации);
					
					НаборЗаписей.Прочитать();  
					
					
					НаборЗаписейНовый.Отбор.Конфигурация.Установить(стр.Данные.Конфигурация);
					НаборЗаписейНовый.Отбор.ОбъектКонфигурации.Установить(стр.Данные.ОбъектКонфигурации);
					НаборЗаписейНовый.Отбор.СвойствоОбъектаКонфигурации.Установить(стр.Данные.СвойствоОбъектаКонфигурации);
					
					Если ТипЗнч(СсылкаОсновная)=Тип("СправочникСсылка.ОбъектыКонфигурации") Тогда        
						НаборЗаписейНовый.Отбор.ОбъектКонфигурации.Установить(СсылкаОсновная);
					ИначеЕсли ТипЗнч(СсылкаОсновная)=Тип("СправочникСсылка.ОбъектыКонфигурации") Тогда        
						НаборЗаписейНовый.Отбор.СвойствоОбъектаКонфигурации.Установить(СсылкаОсновная);
					Иначе
						Продолжить;
					КонецЕсли;
					
					НаборЗаписейНовый.Прочитать();
					
					// копируем в новую
					Если НаборЗаписейНовый.Количество()=0 Тогда     
						НаборЗаписейНовый.Добавить();
						ЗаполнитьЗначенияСвойств(НаборЗаписейНовый[0],НаборЗаписей[0],,"ОбъектКонфигурации,СвойствоОбъектаКонфигурации");
						НаборЗаписейНовый[0].ОбъектКонфигурации=НаборЗаписейНовый.Отбор.ОбъектКонфигурации.Значение; 
						НаборЗаписейНовый[0].СвойствоОбъектаКонфигурации=НаборЗаписейНовый.Отбор.СвойствоОбъектаКонфигурации.Значение;
						НаборЗаписейНовый.Записать(Истина);
					ИначеЕсли  НаборЗаписейНовый.Количество()=1 Тогда
						Если НЕ ЗначениеЗаполнено(НаборЗаписейНовый[0].Ответственный)
							И ЗначениеЗаполнено(НаборЗаписей[0].Ответственный) Тогда
							НаборЗаписейНовый[0].Ответственный = НаборЗаписей[0].Ответственный;
						КонецЕсли;                         
						Если НаборЗаписейНовый[0].Статус=Перечисления.СтатусыОбработки.ТребуетсяОбработка
							И НаборЗаписей[0].Статус=Перечисления.СтатусыОбработки.Обработан Тогда
							НаборЗаписейНовый[0].Ответсвенный = НаборЗаписей[0].Статус;
						КонецЕсли;                         
						НаборЗаписейНовый.Записать(Истина);
					Иначе
						Продолжить;						 
					КонецЕсли;
					
					// удаляем старую    
					Для Каждого стр из НаборЗаписей Цикл
						НаборЗаписей.Удалить(стр);
					КонецЦикла;
					
					НаборЗаписей.Записать(Истина);
					
				КонецЕсли;				
				
			КонецЕсли;
			
		КонецЦикла;

		
	КонецЦикла;
КонецПроцедуры
